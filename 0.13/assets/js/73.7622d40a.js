(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{671:function(t,e,n){"use strict";n.r(e);var o=n(0),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"cw20-basic"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cw20-basic"}},[t._v("#")]),t._v(" CW20 Basic")]),t._v(" "),n("p",[t._v("This is a basic implementation of a cw20 contract. It implements\nthe "),n("RouterLink",{attrs:{to:"/cw-plus/cw20/01-spec.html"}},[t._v("CW20 spec")]),t._v(" and is designed to\nbe deployed as is, or imported into other contracts to easily build\ncw20-compatible tokens with custom logic.")],1),t._v(" "),n("p",[t._v("Implements:")]),t._v(" "),n("ul",[n("li",[t._v("[x] CW20 Base")]),t._v(" "),n("li",[t._v("[x] Mintable extension")]),t._v(" "),n("li",[t._v("[x] Allowances extension")])]),t._v(" "),n("h2",{attrs:{id:"importing-this-contract"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#importing-this-contract"}},[t._v("#")]),t._v(" Importing this contract")]),t._v(" "),n("p",[t._v("You can also import much of the logic of this contract to build another\nERC20-contract, such as a bonding curve, overriding or extending what you\nneed.")]),t._v(" "),n("p",[t._v("Basically, you just need to write your handle function and import\n"),n("code",[t._v("cw20_base::contract::handle_transfer")]),t._v(", etc and dispatch to them.\nThis allows you to use custom "),n("code",[t._v("HandleMsg")]),t._v(" and "),n("code",[t._v("QueryMsg")]),t._v(" with your additional\ncalls, but then use the underlying implementation for the standard cw20\nmessages you want to support. The same with "),n("code",[t._v("QueryMsg")]),t._v(". You "),n("em",[t._v("could")]),t._v(" reuse "),n("code",[t._v("init")]),t._v("\nas it, but it is likely you will want to change it. And it is rather simple.")])])}),[],!1,null,null,null);e.default=s.exports}}]);