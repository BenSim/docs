(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{665:function(t,e,a){"use strict";a.r(e);var o=a(0),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cw2-spec-contract-info-for-migration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cw2-spec-contract-info-for-migration"}},[t._v("#")]),t._v(" CW2 Spec: Contract Info for Migration")]),t._v(" "),a("p",[t._v("Repo link: "),a("a",{attrs:{href:"https://github.com/CosmWasm/cosmwasm-plus/tree/master/packages/cw2",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/CosmWasm/cosmwasm-plus/tree/master/packages/cw2"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Most of the CW* specs are focused on the "),a("em",[t._v("public interfaces")]),t._v("\nof the contract. The APIs used for "),a("code",[t._v("HandleMsg")]),t._v(" or "),a("code",[t._v("QueryMsg")]),t._v(".\nHowever, when we wish to migrate from contract A to contract B,\ncontract B needs to be aware somehow of how the "),a("em",[t._v("state was encoded")]),t._v(".")]),t._v(" "),a("p",[t._v("Generally we use Singletons and Buckets to store the state, but\nif I upgrade to a "),a("code",[t._v("cw20-with-bonding-curve")]),t._v(" contract, it will only\nwork properly if I am migrating from a "),a("code",[t._v("cw20-base")]),t._v(" contract. But how\ncan the new contract know what format the data was stored.")]),t._v(" "),a("p",[t._v("This is where CW2 comes in. It specifies on special Singleton to\nbe stored on disk by all contracts on "),a("code",[t._v("init")]),t._v(". When the "),a("code",[t._v("migrate")]),t._v("\nfunction is called, then the new contract can read that data and\nsee if this is an expected contract we can migrate from. And also\ncontain extra version information if we support multiple migrate\npaths.")]),t._v(" "),a("h3",{attrs:{id:"data-structures"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-structures"}},[t._v("#")]),t._v(" Data structures")]),t._v(" "),a("p",[a("strong",[t._v("Required")])]),t._v(" "),a("p",[t._v("All CW2-compliant contracts must store the following data:")]),t._v(" "),a("ul",[a("li",[t._v("key: "),a("code",[t._v("\\x00\\x0dcontract_info")]),t._v(' (length prefixed "contract_info" using Singleton pattern)')]),t._v(" "),a("li",[t._v("data: Json-serialized "),a("code",[t._v("ContractVersion")])])]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"rust",base64:"cHViIHN0cnVjdCBDb250cmFjdFZlcnNpb24gewogICAgLy8vIGNvbnRyYWN0IGlzIGEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBjb250cmFjdC4KICAgIC8vLyBpdCBzaG91bGQgYnVpbGQgb2ZmIHN0YW5kYXJkIG5hbWVzcGFjaW5nIGZvciB3aGljaGV2ZXIgbGFuZ3VhZ2UgaXQgaXMgaW4sCiAgICAvLy8gYW5kIHByZWZpeCBpdCB3aXRoIHRoZSByZWdpc3RyeSB3ZSB1c2UuCiAgICAvLy8gRm9yIHJ1c3Qgd2UgcHJlZml4IHdpdGggYGNyYXRlcy5pbzpgLCB0byBnaXZlIHVzIGVnLiBgY3JhdGVzLmlvOmN3MjAtYmFzZWAKICAgIHB1YiBjb250cmFjdDogU3RyaW5nLAogICAgLy8vIHZlcnNpb24gaXMgYW55IHN0cmluZyB0aGF0IHRoaXMgaW1wbGVtZW50YXRpb24ga25vd3MuIEl0IG1heSBiZSBzaW1wbGUgY291bnRlciAmcXVvdDsxJnF1b3Q7LCAmcXVvdDsyJnF1b3Q7LgogICAgLy8vIG9yIHNlbWFudGljIHZlcnNpb24gb24gcmVsZWFzZSB0YWdzICZxdW90O3YwLjYuMiZxdW90Oywgb3Igc29tZSBjdXN0b20gZmVhdHVyZSBmbGFnIGxpc3QuCiAgICAvLy8gdGhlIG9ubHkgY29kZSB0aGF0IG5lZWRzIHRvIHVuZGVyc3RhbmQgdGhlIHZlcnNpb24gcGFyc2luZyBpcyBjb2RlIHRoYXQga25vd3MgaG93IHRvCiAgICAvLy8gbWlncmF0ZSBmcm9tIHRoZSBnaXZlbiBjb250cmFjdCAoYW5kIGlzIHRpZWQgdG8gaXQncyBpbXBsZW1lbnRhdGlvbiBzb21laG93KQogICAgcHViIHZlcnNpb246IFN0cmluZywKfQo="}}),t._v(" "),a("p",[t._v("Thus, an serialized example may looks like:")]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"json",base64:"ewogICAgJnF1b3Q7Y29udHJhY3QmcXVvdDs6ICZxdW90O2NyYXRlcy5pbzpjdzIwLWJhc2UmcXVvdDssCiAgICAmcXVvdDt2ZXJzaW9uJnF1b3Q7OiAmcXVvdDt2MC4xLjAmcXVvdDsKfQo="}}),t._v(" "),a("h3",{attrs:{id:"queries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queries"}},[t._v("#")]),t._v(" Queries")]),t._v(" "),a("p",[t._v('Since the state is well defined, we do not need to support any "smart queries".\nWe do provide a helper to construct a "raw query" to read the ContractInfo\nof any CW2-compliant contract.')])],1)}),[],!1,null,null,null);e.default=n.exports}}]);