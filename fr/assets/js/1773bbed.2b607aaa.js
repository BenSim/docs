(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7462],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),l=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=l(t),m=r,v=c["".concat(u,".").concat(m)]||c[m]||p[m]||s;return t?a.createElement(v,o(o({ref:n},d),{},{components:t})):a.createElement(v,o({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=c;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6187:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return d},default:function(){return c}});var a=t(2122),r=t(9756),s=(t(7294),t(3905)),o=["components"],i={sidebar_position:3},u="Configuration de l'environnement",l={unversionedId:"lesson-1/environment",id:"lesson-1/environment",isDocsHomePage:!1,title:"Configuration de l'environnement",description:"Vous avez besoin d'un environnement pour ex\xe9cuter les contrats. Vous pouvez soit ex\xe9cuter votre n\u0153ud localement, soit vous connecter \xe0 un r\xe9seau existant. Pour tester facilement, le r\xe9seau oysternet est en ligne, vous pouvez l'utiliser pour d\xe9ployer et ex\xe9cuter vos contrats.",source:"@site/i18n/fr/docusaurus-plugin-content-docs-dev-academy/current/lesson-1/04-environment.md",sourceDirName:"lesson-1",slug:"/lesson-1/environment",permalink:"/fr/dev-academy/lesson-1/environment",editUrl:"https://crowdin.com/project/cosmwasm-docs/fr",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"devAcademy",previous:{title:"Les bases de Cosmos SDK et CosmWasm",permalink:"/fr/dev-academy/lesson-1/cosmos-sdk-cw"},next:{title:"Exercice",permalink:"/fr/dev-academy/lesson-1/challenge"}},d=[{value:"Go",id:"go",children:[]},{value:"Rust",id:"rust",children:[{value:"Installer Rust sous Linux et Mac",id:"installing-rust-in-linux-and-mac",children:[]}]},{value:"wasmd",id:"wasmd",children:[]}],p={toc:d};function c(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"configuration-de-lenvironnement"},"Configuration de l'environnement"),(0,s.kt)("p",null,"Vous avez besoin d'un environnement pour ex\xe9cuter les contrats. Vous pouvez soit ex\xe9cuter votre n\u0153ud localement, soit vous connecter \xe0 un r\xe9seau existant. Pour tester facilement, le r\xe9seau oysternet est en ligne, vous pouvez l'utiliser pour d\xe9ployer et ex\xe9cuter vos contrats."),(0,s.kt)("p",null,"Lorsque vous interagissez avec le r\xe9seau, vous pouvez soit utiliser ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," qui est un client Go ou Node REPL. Cela dit, Node REPL est recommand\xe9 pour les op\xe9rations de contrats, car la manipulation de JSON n'est pas intuitive avec le client Shell/Go."),(0,s.kt)("p",null,"Pour l'ensemble du cours, nous utiliserons un testnet public pour simplifier les choses."),(0,s.kt)("h2",{id:"go"},"Go"),(0,s.kt)("p",null,"Vous pouvez configurer golang en suivant ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki#working-with-go"},"la documentation officielle"),". Les derni\xe8res versions de ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," n\xe9cessitent la version de go ",(0,s.kt)("inlineCode",{parentName:"p"},"v1.15"),"."),(0,s.kt)("h2",{id:"rust"},"Rust"),(0,s.kt)("p",null,"En supposant que vous n'avez jamais travaill\xe9 avec Rust, vous devrez d'abord installer des outils. L'approche standard consiste \xe0 utiliser ",(0,s.kt)("inlineCode",{parentName:"p"},"rustup")," pour maintenir les d\xe9pendances et g\xe9rer la mise \xe0 jour de plusieurs versions de ",(0,s.kt)("inlineCode",{parentName:"p"},"cargo")," et ",(0,s.kt)("inlineCode",{parentName:"p"},"rustc"),", que vous utiliserez."),(0,s.kt)("h3",{id:"installing-rust-in-linux-and-mac"},"Installer Rust sous Linux et Mac"),(0,s.kt)("p",null,"Tout d'abord, ",(0,s.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"installez rustup"),". Une fois install\xe9, assurez-vous que vous avez la target wasm32 :"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"rustup default stable\ncargo version\n# Si celle-ci est inf\xe9rieure \xe0 1.50.0 , update\nrustup update stable\n\nrustup target list --installed\nrustup target add wasm32-unknown-unknown\n")),(0,s.kt)("h2",{id:"wasmd"},"wasmd"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," est l'\xe9pine dorsale de la plateforme CosmWasm. Il s'agit de l'impl\xe9mentation d'une Cosmoszone avec des contrats intelligents wasm activ\xe9s."),(0,s.kt)("p",null,"Ce code a \xe9t\xe9 fork\xe9 du repo ",(0,s.kt)("inlineCode",{parentName:"p"},"cosmos/gaia")," comme base, puis enrichi de x/wasm et nettoy\xe9 de nombreux fichiers sp\xe9cifiques \xe0 gaia. Cependant, le binaire wasmd devrait fonctionner comme gaiad, \xe0 l'exception de l'ajout du module x/wasm."),(0,s.kt)("p",null,"Si vous avez l'intention de d\xe9velopper ou d'\xe9diter un contrat, vous avez besoin de wasmd."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/CosmWasm/wasmd.git\ncd wasmd\n# remplacer la v0.16.0 par la version la plus stable sur https://github.com/CosmWasm/wasmd/releases\ngit checkout v0.16.0\nmake install\n\n# v\xe9rifier l'installation\nversion wasmd\n")),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Si vous avez des probl\xe8mes ici, v\xe9rifiez votre ",(0,s.kt)("inlineCode",{parentName:"h5"},"PATH"),". ",(0,s.kt)("inlineCode",{parentName:"h5"},"make install")," copiera ",(0,s.kt)("inlineCode",{parentName:"h5"},"wasmd")," dans ",(0,s.kt)("inlineCode",{parentName:"h5"},"$HOME/go/bin")," par d\xe9faut, veuillez vous assurer que cela est configur\xe9 dans votre ",(0,s.kt)("inlineCode",{parentName:"h5"},"PATH")," \xe9galement, ce qui devrait \xeatre le cas en g\xe9n\xe9ral pour construire du code Go \xe0 partir des sources. :::")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("h2",{parentName:"div",id:"setup-wasmd-and-wallet"},"Configurer wasmd et Wallet"),(0,s.kt)("p",{parentName:"div"},"Configurons ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," exec, pointons-le vers les testnets, cr\xe9ons un portefeuille (wallet) et demandons des jetons au robinet (faucet) :"),(0,s.kt)("p",{parentName:"div"},"Tout d'abord, sourcez les configurations du r\xe9seau public oysternet cosmwasm dans le shell :"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"source <(curl -sSL https://raw.githubusercontent.com/CosmWasm/testnets/master/oysternet-1/defaults.env)\n")),(0,s.kt)("p",{parentName:"div"},"Configurer le client :"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'# ajouter des portefeuilles pour les tests\nwasmd keys add main\n>\n{\n  "name" : "main",\n  "type" : "local",\n  "address" : "wasm13nt9rxj7v2ly096hm8qsyfjzg5pr7vn5saqd50",\n  "pubkey" : "wasmpub1addwnpepqf4n9afaefugnfztg7udk50duwr4n8p7pwcjlm9tuumtlux5vud6qvfgp9g",\n  "mnemonic" : "hobby bunker rotate piano satoshi planet network verify else market spring toward pledge turkey tip slim word jaguar congress thumb flag project chalk inspire"\n} }.\n\n')),(0,s.kt)("p",{parentName:"div"},"Vous devez avoir des jetons dans votre adresse pour interagir. Si vous utilisez un n\u0153ud local, vous pouvez sauter cette \xe9tape. Demande de jetons au robinet :"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'JSON=$(jq -n --arg addr $(wasmd keys show -a main) \'{"denom" : "usponge", "address" :$addr}\') && curl -X POST --header\n"Content-Type : application/json" --data "$JSON" https://faucet.oysternet.cosmwasm.com/credit\n')),(0,s.kt)("h2",{parentName:"div",id:"export-wasmd-parameters"},"Export des Param\xe8tres de wasmd"),(0,s.kt)("p",{parentName:"div"},"Le ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," client demande une configuration pour interagir avec les diff\xe9rents testnets. Chaque r\xe9seau de test poss\xe8de ses propres endpoints et param\xe8tres syst\xe8me."),(0,s.kt)("p",{parentName:"div"},"La meilleure fa\xe7on de configurer ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," est de configurer les variables d'environnement ci-dessous :"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# bash\nexport NODE="--node $RPC"\nexport TXFLAG="${NODE} --chain-id ${CHAIN_ID} --gas-prices 0.001usponge --gas auto --gas-adjustment 1.3"\n\n# zsh\nexport NODE=(--node $RPC)\nexport TXFLAG=($NODE --chain-id $CHAIN_ID --gas-prices 0.001usponge --gas auto --gas-adjustment 1.3)\n')),(0,s.kt)("p",{parentName:"div"},"Si la commande ci-dessus g\xe9n\xe8re une erreur, cela signifie que votre shell est diff\xe9rent. S'il n'y a pas d'erreur, essayez d'ex\xe9cuter ceci :"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"wasmd query bank total $NODE\n")),(0,s.kt)("h2",{parentName:"div",id:"setting-up-your-ide"},"Configuration de votre IDE"),(0,s.kt)("p",{parentName:"div"},"Nous avons besoin d'un bon IDE pour d\xe9velopper des smart contracts en Rust. Nous recommandons Intellij avec le plugin Rust."))))}c.isMDXComponent=!0}}]);