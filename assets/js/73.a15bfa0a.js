(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{651:function(e,t,s){"use strict";s.r(t);var i=s(0),a=Object(i.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"build-requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-requirements"}},[e._v("#")]),e._v(" Build Requirements")]),e._v(" "),s("p",[e._v("For minimum system requirements instances with 2 processor CPU and 4GB memory is recommended.\nBuilding code may require larger instances, especially if you want to build a static instance (recompile rust code).")]),e._v(" "),s("h1",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),s("p",[e._v("Node executable may vary between networks, and "),s("a",{attrs:{href:"#option-1-preferred-build-static-binary-using-docker-linux-only"}},[e._v("Option 1")]),e._v("\nmight become obsolete. Please check for "),s("code",[e._v("wasm")]),e._v(" executable instructions for specific networks on "),s("a",{attrs:{href:"https://github.com/CosmWasm/testnets",target:"_blank",rel:"noopener noreferrer"}},[e._v("CosmWasm/testnets"),s("OutboundLink")],1)]),e._v(" "),s("h2",{attrs:{id:"simplest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simplest"}},[e._v("#")]),e._v(" Simplest")]),e._v(" "),s("p",[e._v("Use docker image, or build locally: "),s("code",[e._v("https://github.com/CosmWasm/wasmd/#dockerized")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"bare-metal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bare-metal"}},[e._v("#")]),e._v(" Bare Metal")]),e._v(" "),s("h3",{attrs:{id:"option-1-preferred-build-static-binary-using-docker-linux-only"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-1-preferred-build-static-binary-using-docker-linux-only"}},[e._v("#")]),e._v(" Option 1 (preferred - build static binary using docker - Linux only)")]),e._v(" "),s("p",[e._v("Constructing a "),s("code",[e._v("wasmd")]),e._v(" is a tricky process and involves using alpine linux and recompiling the rust dependencies as static libs. Using Dockerfile is suggested.")]),e._v(" "),s("ol",[s("li",[e._v("Clone the project "),s("code",[e._v("git clone git@github.com:CosmWasm/wasmd")])]),e._v(" "),s("li",[e._v("Checkout to testnets version "),s("code",[e._v("git checkout vx.x.x")])]),e._v(" "),s("li",[e._v("Build docker image "),s("code",[e._v("docker build . -t wasmd-docker")])]),e._v(" "),s("li",[e._v("Extract the specific binary from docker:")])]),e._v(" "),s("code-block",{staticClass:"codeblock",attrs:{language:"sh",base64:"aWQ9JChkb2NrZXIgY3JlYXRlIHdhc21kLWRvY2tlcikKZG9ja2VyIGNwICRpZDovdXNyL2Jpbi93YXNtZCAtICZndDsgd2FzbWQKZG9ja2VyIGNwICRpZDovdXNyL2Jpbi93YXNtY2xpIC0gJmd0OyB3YXNtY2xpCiMgZG9ja2VyIGNwICRpZDovdXNyL2Jpbi9jb3JhbGQgLSAmZ3Q7IGNvcmFsZAojIGRvY2tlciBjcCAkaWQ6L3Vzci9iaW4vY29yYWxjbGkgLSAmZ3Q7IGNvcmFsY2xpCmRvY2tlciBybSAtdiAkaWQK"}}),e._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[e._v("Use the static binary on any bare metal linux box")])]),e._v(" "),s("h3",{attrs:{id:"option-2-dev-style-dynamic-binary-works-on-linux-and-osx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-2-dev-style-dynamic-binary-works-on-linux-and-osx"}},[e._v("#")]),e._v(" Option 2: (dev-style: dynamic binary - works on Linux and OSX)")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("git clone git@github.com:CosmWasm/wasmd")])]),e._v(" "),s("li",[e._v("Compile dev build: "),s("code",[e._v("make build")])]),e._v(" "),s("li",[s("code",[e._v("ldd build/wasmd")])]),e._v(" "),s("li",[e._v("Notice the line like: "),s("code",[e._v("libgo_cosmwasm.so => /home/USERNAME/go/pkg/mod/github.com/!cosm!wasm/go-cosmwasm@v0.9.1/api/libgo_cosmwasm.so")]),e._v("\nthis file must be in the library path along with wasmd")]),e._v(" "),s("li",[e._v("Copy "),s("code",[e._v("wasmd")]),e._v(" to any location on the target system (that will run the node)")]),e._v(" "),s("li",[e._v("Copy "),s("code",[e._v("libgo_cosmwasm.so")]),e._v(" (path above) to the target system under "),s("code",[e._v("/usr/lib/libgo_cosmwasm.so")])])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);