(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7285],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},w=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),w=p(n),d=c,m=w["".concat(i,".").concat(d)]||w[d]||u[d]||o;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function d(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=n.length,a=new Array(o);a[0]=w;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:c,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}w.displayName="MDXCreateElement"},9758:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return l},default:function(){return w}});var r=n(2122),c=n(9756),o=(n(7294),n(3905)),a=["components"],s={title:"cw20-escrow Spec",sidebar_position:5},i="CW20 Escrow",p={unversionedId:"cw-plus/cw20/cw20-escrow-spec",id:"cw-plus/cw20/cw20-escrow-spec",isDocsHomePage:!1,title:"cw20-escrow Spec",description:"cw20-escrow source code//github.com/CosmWasm/cosmwasm-plus/tree/master/contracts/cw20-escrow",source:"@site/docs/cw-plus/cw20/cw20-escrow-spec.md",sourceDirName:"cw-plus/cw20",slug:"/cw-plus/cw20/cw20-escrow-spec",permalink:"/0.14/cw-plus/cw20/cw20-escrow-spec",editUrl:"https://github.com/CosmWasm/docs/edit/main/docs/cw-plus/cw20/cw20-escrow-spec.md",version:"current",sidebarPosition:5,frontMatter:{title:"cw20-escrow Spec",sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"cw20-bonding Spec",permalink:"/0.14/cw-plus/cw20/cw20-bonding-spec"},next:{title:"cw20-staking Spec",permalink:"/0.14/cw-plus/cw20/cw20-staking-spec"}},l=[{value:"Token types",id:"token-types",children:[]}],u={toc:l};function w(e){var t=e.components,n=(0,c.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cw20-escrow"},"CW20 Escrow"),(0,o.kt)("p",null,"cw20-escrow source code: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cosmwasm-plus/tree/master/contracts/cw20-escrow"},"https://github.com/CosmWasm/cosmwasm-plus/tree/master/contracts/cw20-escrow")),(0,o.kt)("p",null,"This is an escrow meta-contract that allows multiple users to\ncreate independent escrows. Each escrow has a sender, recipient,\nand arbiter. It also has a unique id (for future calls to reference it)\nand an optional timeout."),(0,o.kt)("p",null,"The basic function is the sender creates an escrow with funds.\nThe arbiter may at any time decide to release the funds to either\nthe intended recipient or the original sender (but no one else),\nand if it passes with optional timeout, anyone can refund the locked\ntokens to the original sender."),(0,o.kt)("p",null,'We also add a function called "top_up", which allows anyone to add more\nfunds to the contract at any time.'),(0,o.kt)("h2",{id:"token-types"},"Token types"),(0,o.kt)("p",null,'This contract is meant not just to be functional, but also to work as a simple\nexample of an cw20 "Receiver". And demonstrate how the same calls can be fed\nnative tokens (via typical ',(0,o.kt)("inlineCode",{parentName:"p"},"HandleMsg")," route), or cw20 tokens (via ",(0,o.kt)("inlineCode",{parentName:"p"},"Receiver")," interface)."),(0,o.kt)("p",null,"Both ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"top_up")," can be called directly (with a payload of native tokens),\nor from a cw20 contract using the ",(0,o.kt)("a",{parentName:"p",href:"/0.14/cw-plus/cw20/spec#receiver"},"Receiver Interface"),".\nThis means we can load the escrow with any number of native or cw20 tokens (or a mix),\nallow of which get released when the arbiter decides."))}w.isMDXComponent=!0}}]);